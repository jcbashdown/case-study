@startuml
left to right direction
skinparam componentStyle uml2
skinparam packagestyle uml2 

together {
  component Dashboard {
    component "Local Data"
    component "Syncing System"
    component "Data Display" {
      component "Patient number"
      component "Patient illnesses"
      component "In-patient treatment duration"
      component "Bed occupation rate"
      component "Last sync"
      component "Sync error message with suggested action"
    }
  note as N
    - Gets the latest data on first load
    - Syncs in the background periodically
    - Displays the last data and sync time
    - Indicates when sync is consistently failing
    - Optional auth to see this dashboard
  end note
  }
}
together {
  package LAN {
    package "Network Devices" as Network {
      component Router
      component "WiFi Boosters" as WiFiBoosters
    }
    package "Local Server" as LocalServer {
      component Database as DB
      component "PWA App Server" as PWAServer
      component "API Server" as API
    }
    package MobileDevice {
      component "Mobile Dashboard" as MobileDashboard {
      }
      component "Installed Patient Management Progressive Web App" as InstalledPWA {
      }
    }
    package "Dashboard Display" as DashboardDisplay {
      component "Full Screen Dashboard" as FSDashboard {

      }
    }
    note right of LocalServer
      - Hosts server application and database
      - Connects to mobile devices via local WiFi
      - Supports real-time data sharing
      - Operates offline
      - Has synchronization capabilities
    end note
  }

}

component "Patient Management Progressive Web App" as PWA {
  package Functionality {
    component "Patient Enrollment" {
      component "Patient Identification"
    }
    component "Health Record System"
    component "Patient Processing System for stages of care"
  }
  package Implementation {
    together {
      component "Syncing system" as SyncingSystem
      component "PWA UI" as UI
      component "On Device DB" as OnDeviceDB
    }
  }
  note top of Implementation 
            - Likely a cached SPA with client routing.
            - Any browser supporting service workers should also support this.
            - Pages should be as simple as possible - largely static - 
            ...to not require significant CPU or memory resources on the device.
            - Strict client side validation should be implemented.
            - All data should be written to a local db such as RxDB and synced when possible.
  end note
}


Router <--> WiFiBoosters
LocalServer <--> Network: Syncs through network 
MobileDevice <--> Network: Syncs through network 
DashboardDisplay <--> Network: Syncs through network 

Implementation -[hidden]up-> Functionality

FSDashboard -right-> Dashboard
MobileDashboard -right-> Dashboard
InstalledPWA -left-> PWA

UI <-> OnDeviceDB 
OnDeviceDB <-> SyncingSystem

PWAServer <-right-> DB 
API <-left-> DB 

@enduml
